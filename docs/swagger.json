{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Kişi yönetimi için REST API. JWT tabanlı kimlik doğrulama, sayfalama, filtreleme ve favoriler içerir.\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb1-wt6l.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Kişilerle ilgili uç noktalar"
    },
    {
      "name": "Auth",
      "description": "Kimlik doğrulama uç noktaları"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Kişi listesini getir",
        "operationId": "getContacts",
        "description": "Kişileri sayfalama, filtre ve sıralama ile döndürür.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Sayfa numarası"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Sayfa başına kayıt"
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ]
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Ada/e-postaya göre arama"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "updatedAt",
                "name"
              ]
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Başarılı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsList"
                }
              }
            }
          },
          "401": {
            "description": "Yetkisiz",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Yeni kişi oluştur",
        "operationId": "createContact",
        "description": "Yeni bir kişi ekler.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Oluşturuldu",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Geçersiz istek",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Yetkisiz",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Zaten var (email/telefon)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "parameters": [
        {
          "in": "path",
          "name": "contactId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Kişi ID"
        }
      ],
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Bir kişiyi getir",
        "operationId": "getContactById",
        "description": "Kullanıcının kendi kişileri arasından tek bir kişiyi döndürür.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Bulundu",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Yetkisiz",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bulunamadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Kişiyi güncelle",
        "operationId": "updateContact",
        "description": "Belirtilen alanları günceller.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Güncellendi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "401": {
            "description": "Yetkisiz",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bulunamadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Zaten var (email/telefon)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Kişiyi sil",
        "operationId": "deleteContact",
        "description": "Kişiyi siler.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Silindi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "401": {
            "description": "Yetkisiz",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bulunamadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Kayıt ol",
        "operationId": "register",
        "description": "Yeni kullanıcı oluşturur.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Nur"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "nur@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "secret123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Kayıt başarılı",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Registered"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "68ab4c0aaa4f8455f8c4139c"
                        },
                        "name": {
                          "type": "string",
                          "example": "Nur"
                        },
                        "email": {
                          "type": "string",
                          "example": "nur@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Giriş yap",
        "operationId": "login",
        "description": "Email ve şifre ile giriş yapar, access/refresh token döner.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "nur@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Başarılı",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Logged in"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJI..."
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "68ab4c0aaa4f8455f8c4139c"
                            },
                            "name": {
                              "type": "string",
                              "example": "Nur"
                            },
                            "email": {
                              "type": "string",
                              "example": "nur@example.com"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Access token yenile",
        "operationId": "refresh",
        "description": "Refresh token ile yeni access token üretir. (Cookie veya body ile gönderilebilir.)",
        "requestBody": {
          "required": false
        },
        "responses": {
          "200": {
            "description": "Başarılı",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Refreshed"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJI..."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Çıkış yap",
        "operationId": "logout",
        "description": "Geçerli oturumu sonlandırır (refresh token iptal edilir).",
        "responses": {
          "200": {
            "description": "Çıkış başarılı",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Logged out"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "68ab4c0aaa4f8455f8c4139c"
          },
          "name": {
            "type": "string",
            "example": "Nur"
          },
          "phoneNumber": {
            "type": "string",
            "example": "555-123-4567"
          },
          "email": {
            "type": "string",
            "example": "nur@example.com"
          },
          "isFavourite": {
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "work"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Successfully found contact"
          },
          "data": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "ContactsList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Successfully found contacts"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Route not found"
          },
          "data": {
            "type": "string",
            "example": "Stack or details..."
          }
        }
      },
      "ContactInput": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Ali Veli"
          },
          "phoneNumber": {
            "type": "string",
            "example": "555-000-0000"
          },
          "email": {
            "type": "string",
            "example": "ali@example.com"
          },
          "isFavourite": {
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "work"
          }
        }
      },
      "ContactUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isFavourite": {
            "type": "boolean"
          },
          "contactType": {
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ]
          }
        }
      }
    }
  }
}